<?xml version="1.0" encoding="utf-8"?>
<components:Flow xmlns:fx="http://ns.adobe.com/mxml/2009" 
				 xmlns:s="library://ns.adobe.com/flex/spark" 
				 xmlns:mx="library://ns.adobe.com/flex/halo"
				 xmlns:components="org.maths.nrich.flows.components.*"
				 skinClass = "{FlowSkin}"
				 sourceSkin = "org.maths.nrich.flows.skins.sources.BinarySkin"
				 arity = "2"
				 >
	<fx:Script>
		<![CDATA[
			import org.maths.nrich.flows.skins.FlowSkin;
			import org.maths.nrich.flows.skins.sources.BinarySkin;
			import org.maths.nrich.flows.skins.sources.OverSkin;
			import org.maths.nrich.flows.skins.sources.PowerSkin;
			import org.maths.nrich.flows.skins.sources.LogSkin;
			
			// Mark the binary flows arguments
			override public function preStepCheck():Boolean {
				return arg0Ready && arg0 && arg1Ready && arg1;		
			}
	
			override public function resetForStep():void
			{
				var feeds:Object = padFeeds;
				arg0Ready = (feeds.pad0 == null);
				arg1Ready = (feeds.pad1 == null);
			}
/*			
			override public function resetForStep():void
			{
				var pFlows:Vector.<Flow> = previousFlows;
				arg0Ready = true;
				arg1Ready = true;
				for(var i:int = 0; i < pFlows.length; i++) {
					var f:Flow = pFlows[i];
					for(var j:int = 0; j < f.sinks.length; j++) {
						var sink:Sinker = f.sinks[j];
						var hookup:SinkSourceLink = sink.attachment;
						if(hookup.sourceFlow == this) {
							if(hookup.pad == source.pad0)
								arg0Ready = false;
							if(hookup.pad == source.pad1)
								arg1Ready = false;
						}
					}
				}
			}
*/			
			override public function toXML():XML {
				
				var bf:XML = super.toXML();
				bf.setName("binaryFlow");

				if(sourceSkin == OverSkin)
					bf.@skin = "OverSkin";
				else if(sourceSkin == PowerSkin)
					bf.@skin = "PowerSkin";
				else if(sourceSkin == LogSkin)
					bf.@skin = "LogSkin";
				trace("binaryFlow =" + bf.toXMLString());
				return bf;
			}
			

		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	

</components:Flow>
